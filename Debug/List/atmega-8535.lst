
AVRASM ver. 2.1.30  C:\Users\daffa\OneDrive\Desktop\Projects\tubes-mikro-trial\Debug\List\atmega-8535.asm Mon May 27 19:02:43 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.50 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8535
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 128 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x20
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c01b      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _0x3:
000015 0000
000016 0000
000017 0000
000018 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000019 0000
00001a 0000
C:\Users\daffa\OneDrive\Desktop\Projects\tubes-mikro-trial\Debug\List\atmega-8535.asm(1445): warning: .cseg .db misalignment - padding zero byte
00001b 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 __RESET:
00001c 94f8      	CLI
00001d 27ee      	CLR  R30
00001e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00001f e0f1      	LDI  R31,1
000020 bffb      	OUT  GICR,R31
000021 bfeb      	OUT  GICR,R30
000022 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000023 e08d      	LDI  R24,(14-2)+1
000024 e0a2      	LDI  R26,2
000025 27bb      	CLR  R27
                 __CLEAR_REG:
000026 93ed      	ST   X+,R30
000027 958a      	DEC  R24
000028 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000029 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00002a e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00002b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00002c 93ed      	ST   X+,R30
00002d 9701      	SBIW R24,1
00002e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00002f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000030 bfed      	OUT  SPL,R30
000031 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000032 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000033 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000034 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000035 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 001F {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0020 // Declare your local variables here
                 ; 0000 0021 int cetakP = 0;
                 ; 0000 0022 int cetakS = 0;
                 ; 0000 0023 int panggilP = 0;
                 ; 0000 0024 int panggilS = 0;
                 ; 0000 0025 int indicator = 0;
                 ; 0000 0026 
                 ; 0000 0027 int totalCetak = 0;
                 ; 0000 0028 int totalPanggil = 0;
                 ; 0000 0029 
                 ; 0000 002A bool cetakBool = 0;
                 ; 0000 002B bool panggilBool = 0;
                 ; 0000 002C bool resetBool = 0;
                 ; 0000 002D 
                 ; 0000 002E int i = 0;
                 ; 0000 002F int display[4];
                 ; 0000 0030 
                 ; 0000 0031 // Input/Output Ports initialization
                 ; 0000 0032 // Port A initialization
                 ; 0000 0033 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0034 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000036 9765      	SBIW R28,21
000037 e08d      	LDI  R24,13
                +
000038 e068     +LDI R22 , LOW ( 8 )
000039 e070     +LDI R23 , HIGH ( 8 )
                 	__GETWRN 22,23,8
00003a e2ea      	LDI  R30,LOW(_0x3*2)
00003b e0f0      	LDI  R31,HIGH(_0x3*2)
00003c d0d7      	RCALL __INITLOCB
                 ;	cetakP -> R16,R17
                 ;	cetakS -> R18,R19
                 ;	panggilP -> R20,R21
                 ;	panggilS -> Y+19
                 ;	indicator -> Y+17
                 ;	totalCetak -> Y+15
                 ;	totalPanggil -> Y+13
                 ;	cetakBool -> Y+12
                 ;	panggilBool -> Y+11
                 ;	resetBool -> Y+10
                 ;	i -> Y+8
                 ;	display -> Y+0
                +
00003d e000     +LDI R16 , LOW ( 0 )
00003e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00003f e020     +LDI R18 , LOW ( 0 )
000040 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000041 e040     +LDI R20 , LOW ( 0 )
000042 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000043 e0e0      	LDI  R30,LOW(0)
000044 bbea      	OUT  0x1A,R30
                 ; 0000 0035 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0036 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000045 bbeb      	OUT  0x1B,R30
                 ; 0000 0037 
                 ; 0000 0038 // Port B initialization
                 ; 0000 0039 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 003A DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000046 efef      	LDI  R30,LOW(255)
000047 bbe7      	OUT  0x17,R30
                 ; 0000 003B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 003C PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000048 e0e0      	LDI  R30,LOW(0)
000049 bbe8      	OUT  0x18,R30
                 ; 0000 003D 
                 ; 0000 003E // Port C initialization
                 ; 0000 003F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0040 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00004a efef      	LDI  R30,LOW(255)
00004b bbe4      	OUT  0x14,R30
                 ; 0000 0041 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0042 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00004c e0e0      	LDI  R30,LOW(0)
00004d bbe5      	OUT  0x15,R30
                 ; 0000 0043 
                 ; 0000 0044 // Port D initialization
                 ; 0000 0045 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0046 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00004e bbe1      	OUT  0x11,R30
                 ; 0000 0047 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0048 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00004f bbe2      	OUT  0x12,R30
                 ; 0000 0049 
                 ; 0000 004A // Timer/Counter 0 initialization
                 ; 0000 004B // Clock source: System Clock
                 ; 0000 004C // Clock value: Timer 0 Stopped
                 ; 0000 004D // Mode: Normal top=0xFF
                 ; 0000 004E // OC0 output: Disconnected
                 ; 0000 004F TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000050 bfe3      	OUT  0x33,R30
                 ; 0000 0050 TCNT0=0x00;
000051 bfe2      	OUT  0x32,R30
                 ; 0000 0051 OCR0=0x00;
000052 bfec      	OUT  0x3C,R30
                 ; 0000 0052 
                 ; 0000 0053 // Timer/Counter 1 initialization
                 ; 0000 0054 // Clock source: System Clock
                 ; 0000 0055 // Clock value: Timer1 Stopped
                 ; 0000 0056 // Mode: Normal top=0xFFFF
                 ; 0000 0057 // OC1A output: Disconnected
                 ; 0000 0058 // OC1B output: Disconnected
                 ; 0000 0059 // Noise Canceler: Off
                 ; 0000 005A // Input Capture on Falling Edge
                 ; 0000 005B // Timer1 Overflow Interrupt: Off
                 ; 0000 005C // Input Capture Interrupt: Off
                 ; 0000 005D // Compare A Match Interrupt: Off
                 ; 0000 005E // Compare B Match Interrupt: Off
                 ; 0000 005F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000053 bdef      	OUT  0x2F,R30
                 ; 0000 0060 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000054 bdee      	OUT  0x2E,R30
                 ; 0000 0061 TCNT1H=0x00;
000055 bded      	OUT  0x2D,R30
                 ; 0000 0062 TCNT1L=0x00;
000056 bdec      	OUT  0x2C,R30
                 ; 0000 0063 ICR1H=0x00;
000057 bde7      	OUT  0x27,R30
                 ; 0000 0064 ICR1L=0x00;
000058 bde6      	OUT  0x26,R30
                 ; 0000 0065 OCR1AH=0x00;
000059 bdeb      	OUT  0x2B,R30
                 ; 0000 0066 OCR1AL=0x00;
00005a bdea      	OUT  0x2A,R30
                 ; 0000 0067 OCR1BH=0x00;
00005b bde9      	OUT  0x29,R30
                 ; 0000 0068 OCR1BL=0x00;
00005c bde8      	OUT  0x28,R30
                 ; 0000 0069 
                 ; 0000 006A // Timer/Counter 2 initialization
                 ; 0000 006B // Clock source: System Clock
                 ; 0000 006C // Clock value: Timer2 Stopped
                 ; 0000 006D // Mode: Normal top=0xFF
                 ; 0000 006E // OC2 output: Disconnected
                 ; 0000 006F ASSR=0<<AS2;
00005d bde2      	OUT  0x22,R30
                 ; 0000 0070 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00005e bde5      	OUT  0x25,R30
                 ; 0000 0071 TCNT2=0x00;
00005f bde4      	OUT  0x24,R30
                 ; 0000 0072 OCR2=0x00;
000060 bde3      	OUT  0x23,R30
                 ; 0000 0073 
                 ; 0000 0074 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0075 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000061 bfe9      	OUT  0x39,R30
                 ; 0000 0076 
                 ; 0000 0077 // External Interrupt(s) initialization
                 ; 0000 0078 // INT0: Off
                 ; 0000 0079 // INT1: Off
                 ; 0000 007A // INT2: Off
                 ; 0000 007B MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000062 bfe5      	OUT  0x35,R30
                 ; 0000 007C MCUCSR=(0<<ISC2);
000063 bfe4      	OUT  0x34,R30
                 ; 0000 007D 
                 ; 0000 007E // USART initialization
                 ; 0000 007F // USART disabled
                 ; 0000 0080 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000064 b9ea      	OUT  0xA,R30
                 ; 0000 0081 
                 ; 0000 0082 // Analog Comparator initialization
                 ; 0000 0083 // Analog Comparator: Off
                 ; 0000 0084 // The Analog Comparator's positive input is
                 ; 0000 0085 // connected to the AIN0 pin
                 ; 0000 0086 // The Analog Comparator's negative input is
                 ; 0000 0087 // connected to the AIN1 pin
                 ; 0000 0088 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000065 e8e0      	LDI  R30,LOW(128)
000066 b9e8      	OUT  0x8,R30
                 ; 0000 0089 SFIOR=(0<<ACME);
000067 e0e0      	LDI  R30,LOW(0)
000068 bfe0      	OUT  0x30,R30
                 ; 0000 008A 
                 ; 0000 008B // ADC initialization
                 ; 0000 008C // ADC disabled
                 ; 0000 008D ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
000069 b9e6      	OUT  0x6,R30
                 ; 0000 008E 
                 ; 0000 008F // SPI initialization
                 ; 0000 0090 // SPI disabled
                 ; 0000 0091 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00006a b9ed      	OUT  0xD,R30
                 ; 0000 0092 
                 ; 0000 0093 // TWI initialization
                 ; 0000 0094 // TWI disabled
                 ; 0000 0095 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00006b bfe6      	OUT  0x36,R30
                 ; 0000 0096 
                 ; 0000 0097 while (1)
                 _0x4:
                 ; 0000 0098 {
                 ; 0000 0099 // Place your code here
                 ; 0000 009A 
                 ; 0000 009B totalCetak = cetakS + (cetakP*10);
00006c 01f8      	MOVW R30,R16
00006d e0aa      	LDI  R26,LOW(10)
00006e e0b0      	LDI  R27,HIGH(10)
00006f d0c4      	RCALL __MULW12
000070 0fe2      	ADD  R30,R18
000071 1ff3      	ADC  R31,R19
000072 87ef      	STD  Y+15,R30
000073 8bf8      	STD  Y+15+1,R31
                 ; 0000 009C totalPanggil = panggilS + (panggilP*10);
000074 01fa      	MOVW R30,R20
000075 e0aa      	LDI  R26,LOW(10)
000076 e0b0      	LDI  R27,HIGH(10)
000077 d0bc      	RCALL __MULW12
000078 89ab      	LDD  R26,Y+19
000079 89bc      	LDD  R27,Y+19+1
00007a 0fea      	ADD  R30,R26
00007b 1ffb      	ADC  R31,R27
00007c 87ed      	STD  Y+13,R30
00007d 87fe      	STD  Y+13+1,R31
                 ; 0000 009D 
                 ; 0000 009E 
                 ; 0000 009F 
                 ; 0000 00A0 
                 ; 0000 00A1 if(PINA.0 == 1 && PINA.0 != cetakBool) {
00007e 9bc8      	SBIS 0x19,0
00007f c006      	RJMP _0x8
000080 e0a0      	LDI  R26,0
000081 99c8      	SBIC 0x19,0
000082 e0a1      	LDI  R26,1
000083 85ec      	LDD  R30,Y+12
000084 17ea      	CP   R30,R26
000085 f409      	BRNE _0x9
                 _0x8:
000086 c00a      	RJMP _0x7
                 _0x9:
                 ; 0000 00A2 cetakS++;
                +
000087 5f2f     +SUBI R18 , LOW ( - 1 )
000088 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 00A3 if (cetakS > 9)
                +
000089 302a     +CPI R18 , LOW ( 10 )
00008a e0e0     +LDI R30 , HIGH ( 10 )
00008b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
00008c f024      	BRLT _0xA
                 ; 0000 00A4 {
                 ; 0000 00A5 cetakS = 0;
                +
00008d e020     +LDI R18 , LOW ( 0 )
00008e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 00A6 cetakP++;
                +
00008f 5f0f     +SUBI R16 , LOW ( - 1 )
000090 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00A7 }
                 ; 0000 00A8 }
                 _0xA:
                 ; 0000 00A9 
                 ; 0000 00AA cetakBool = PINA.0;
                 _0x7:
000091 e0e0      	LDI  R30,0
000092 99c8      	SBIC 0x19,0
000093 e0e1      	LDI  R30,1
000094 87ec      	STD  Y+12,R30
                 ; 0000 00AB 
                 ; 0000 00AC if(PINA.1 == 1 && PINA.1 != panggilBool) {
000095 9bc9      	SBIS 0x19,1
000096 c006      	RJMP _0xC
000097 e0a0      	LDI  R26,0
000098 99c9      	SBIC 0x19,1
000099 e0a1      	LDI  R26,1
00009a 85eb      	LDD  R30,Y+11
00009b 17ea      	CP   R30,R26
00009c f409      	BRNE _0xD
                 _0xC:
00009d c015      	RJMP _0xB
                 _0xD:
                 ; 0000 00AD if (totalPanggil < totalCetak  )
00009e 85ef      	LDD  R30,Y+15
00009f 89f8      	LDD  R31,Y+15+1
0000a0 85ad      	LDD  R26,Y+13
0000a1 85be      	LDD  R27,Y+13+1
0000a2 17ae      	CP   R26,R30
0000a3 07bf      	CPC  R27,R31
0000a4 f474      	BRGE _0xE
                 ; 0000 00AE {
                 ; 0000 00AF panggilS++;
0000a5 89eb      	LDD  R30,Y+19
0000a6 89fc      	LDD  R31,Y+19+1
0000a7 9631      	ADIW R30,1
0000a8 8beb      	STD  Y+19,R30
0000a9 8bfc      	STD  Y+19+1,R31
                 ; 0000 00B0 if (panggilS > 9)
0000aa 89ab      	LDD  R26,Y+19
0000ab 89bc      	LDD  R27,Y+19+1
0000ac 971a      	SBIW R26,10
0000ad f02c      	BRLT _0xF
                 ; 0000 00B1 {
                 ; 0000 00B2 panggilS = 0;
0000ae e0e0      	LDI  R30,LOW(0)
0000af 8beb      	STD  Y+19,R30
0000b0 8bec      	STD  Y+19+1,R30
                 ; 0000 00B3 panggilP++;
                +
0000b1 5f4f     +SUBI R20 , LOW ( - 1 )
0000b2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 00B4 }
                 ; 0000 00B5 
                 ; 0000 00B6 }
                 _0xF:
                 ; 0000 00B7 
                 ; 0000 00B8 }
                 _0xE:
                 ; 0000 00B9 
                 ; 0000 00BA panggilBool = PINA.1;
                 _0xB:
0000b3 e0e0      	LDI  R30,0
0000b4 99c9      	SBIC 0x19,1
0000b5 e0e1      	LDI  R30,1
0000b6 87eb      	STD  Y+11,R30
                 ; 0000 00BB 
                 ; 0000 00BC if(PINA.2 == 1 && PINA.2 != resetBool) {
0000b7 9bca      	SBIS 0x19,2
0000b8 c006      	RJMP _0x11
0000b9 e0a0      	LDI  R26,0
0000ba 99ca      	SBIC 0x19,2
0000bb e0a1      	LDI  R26,1
0000bc 85ea      	LDD  R30,Y+10
0000bd 17ea      	CP   R30,R26
0000be f409      	BRNE _0x12
                 _0x11:
0000bf c009      	RJMP _0x10
                 _0x12:
                 ; 0000 00BD cetakS = 0;
                +
0000c0 e020     +LDI R18 , LOW ( 0 )
0000c1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 00BE cetakP = 0;
                +
0000c2 e000     +LDI R16 , LOW ( 0 )
0000c3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 00BF panggilS = 0;
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 8beb      	STD  Y+19,R30
0000c6 8bec      	STD  Y+19+1,R30
                 ; 0000 00C0 panggilP = 0;
                +
0000c7 e040     +LDI R20 , LOW ( 0 )
0000c8 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 00C1 }
                 ; 0000 00C2 
                 ; 0000 00C3 resetBool = PINA.2;
                 _0x10:
0000c9 e0e0      	LDI  R30,0
0000ca 99ca      	SBIC 0x19,2
0000cb e0e1      	LDI  R30,1
0000cc 87ea      	STD  Y+10,R30
                 ; 0000 00C4 
                 ; 0000 00C5 if (cetakS != 0 || cetakP != 0 || panggilS != 0 || panggilP != 0)
0000cd 2400      	CLR  R0
0000ce 1602      	CP   R0,R18
0000cf 0603      	CPC  R0,R19
0000d0 f461      	BRNE _0x14
0000d1 2400      	CLR  R0
0000d2 1600      	CP   R0,R16
0000d3 0601      	CPC  R0,R17
0000d4 f441      	BRNE _0x14
0000d5 89ab      	LDD  R26,Y+19
0000d6 89bc      	LDD  R27,Y+19+1
0000d7 9710      	SBIW R26,0
0000d8 f421      	BRNE _0x14
0000d9 2400      	CLR  R0
0000da 1604      	CP   R0,R20
0000db 0605      	CPC  R0,R21
0000dc f029      	BREQ _0x13
                 _0x14:
                 ; 0000 00C6 {
                 ; 0000 00C7 indicator = 16;
0000dd e1e0      	LDI  R30,LOW(16)
0000de e0f0      	LDI  R31,HIGH(16)
0000df 8be9      	STD  Y+17,R30
0000e0 8bfa      	STD  Y+17+1,R31
                 ; 0000 00C8 } else {
0000e1 c003      	RJMP _0x16
                 _0x13:
                 ; 0000 00C9 indicator = 0;
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 8be9      	STD  Y+17,R30
0000e4 8bea      	STD  Y+17+1,R30
                 ; 0000 00CA }
                 _0x16:
                 ; 0000 00CB 
                 ; 0000 00CC 
                 ; 0000 00CD display[0] = cetakP;
                +
0000e5 8308     +STD Y + 0 , R16
0000e6 8319     +STD Y + 0 + 1 , R17
                 	__PUTWSR 16,17,0
                 ; 0000 00CE display[1] = cetakS;
0000e7 01fe      	MOVW R30,R28
0000e8 9632      	ADIW R30,2
0000e9 8320      	ST   Z,R18
0000ea 8331      	STD  Z+1,R19
                 ; 0000 00CF display[2] = panggilP;
0000eb 01fe      	MOVW R30,R28
0000ec 9634      	ADIW R30,4
0000ed 8340      	ST   Z,R20
0000ee 8351      	STD  Z+1,R21
                 ; 0000 00D0 display[3] = panggilS;
0000ef 89eb      	LDD  R30,Y+19
0000f0 89fc      	LDD  R31,Y+19+1
0000f1 83ee      	STD  Y+6,R30
0000f2 83ff      	STD  Y+6+1,R31
                 ; 0000 00D1 for (i = 0;i <= 3; i++)
0000f3 e0e0      	LDI  R30,LOW(0)
0000f4 87e8      	STD  Y+8,R30
0000f5 87e9      	STD  Y+8+1,R30
                 _0x18:
0000f6 85a8      	LDD  R26,Y+8
0000f7 85b9      	LDD  R27,Y+8+1
0000f8 9714      	SBIW R26,4
0000f9 f4c4      	BRGE _0x19
                 ; 0000 00D2 {
                 ; 0000 00D3 PORTB = display[i];
0000fa 85e8      	LDD  R30,Y+8
0000fb 85f9      	LDD  R31,Y+8+1
0000fc 01de      	MOVW R26,R28
0000fd 0fee      	LSL  R30
0000fe 1fff      	ROL  R31
0000ff 0fae      	ADD  R26,R30
000100 1fbf      	ADC  R27,R31
000101 91ec      	LD   R30,X
000102 bbe8      	OUT  0x18,R30
                 ; 0000 00D4 PORTC = (0b0001 << i) + indicator;
000103 85e8      	LDD  R30,Y+8
000104 e0a1      	LDI  R26,LOW(1)
000105 d01e      	RCALL __LSLB12
000106 89a9      	LDD  R26,Y+17
000107 0fea      	ADD  R30,R26
000108 bbe5      	OUT  0x15,R30
                 ; 0000 00D5 delay_ms(50);
000109 e3a2      	LDI  R26,LOW(50)
00010a e0b0      	LDI  R27,0
00010b d03b      	RCALL _delay_ms
                 ; 0000 00D6 }
00010c 85e8      	LDD  R30,Y+8
00010d 85f9      	LDD  R31,Y+8+1
00010e 9631      	ADIW R30,1
00010f 87e8      	STD  Y+8,R30
000110 87f9      	STD  Y+8+1,R31
000111 cfe4      	RJMP _0x18
                 _0x19:
                 ; 0000 00D7 
                 ; 0000 00D8 
                 ; 0000 00D9 }
000112 cf59      	RJMP _0x4
                 ; 0000 00DA }
                 _0x1A:
000113 cfff      	RJMP _0x1A
                 ; .FEND
                 
                 	.CSEG
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __INITLOCB:
                 __INITLOCW:
000114 93af      	PUSH R26
000115 93bf      	PUSH R27
000116 01db      	MOVW R26,R22
000117 0fac      	ADD  R26,R28
000118 1fbd      	ADC  R27,R29
                 __INITLOC0:
000119 9005      	LPM  R0,Z+
00011a 920d      	ST   X+,R0
00011b 958a      	DEC  R24
00011c f7e1      	BRNE __INITLOC0
00011d 91bf      	POP  R27
00011e 91af      	POP  R26
00011f 9508      	RET
                 
                 __ANEGW1:
000120 95f1      	NEG  R31
000121 95e1      	NEG  R30
000122 40f0      	SBCI R31,0
000123 9508      	RET
                 
                 __LSLB12:
000124 23ee      	TST  R30
000125 2e0e      	MOV  R0,R30
000126 2fea      	MOV  R30,R26
000127 f019      	BREQ __LSLB12R
                 __LSLB12L:
000128 0fee      	LSL  R30
000129 940a      	DEC  R0
00012a f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00012b 9508      	RET
                 
                 __MULW12U:
00012c 9ffa      	MUL  R31,R26
00012d 2df0      	MOV  R31,R0
00012e 9feb      	MUL  R30,R27
00012f 0df0      	ADD  R31,R0
000130 9fea      	MUL  R30,R26
000131 2de0      	MOV  R30,R0
000132 0df1      	ADD  R31,R1
000133 9508      	RET
                 
                 __MULW12:
000134 d004      	RCALL __CHKSIGNW
000135 dff6      	RCALL __MULW12U
000136 f40e      	BRTC __MULW121
000137 dfe8      	RCALL __ANEGW1
                 __MULW121:
000138 9508      	RET
                 
                 __CHKSIGNW:
000139 94e8      	CLT
00013a fff7      	SBRS R31,7
00013b c002      	RJMP __CHKSW1
00013c dfe3      	RCALL __ANEGW1
00013d 9468      	SET
                 __CHKSW1:
00013e ffb7      	SBRS R27,7
00013f c006      	RJMP __CHKSW2
000140 95b1      	NEG  R27
000141 95a1      	NEG  R26
000142 40b0      	SBCI R27,0
000143 f800      	BLD  R0,0
000144 9403      	INC  R0
000145 fa00      	BST  R0,0
                 __CHKSW2:
000146 9508      	RET
                 
                 _delay_ms:
000147 9610      	adiw r26,0
000148 f039      	breq __delay_ms1
                 __delay_ms0:
000149 95a8      	wdr
                +
00014a ed80     +LDI R24 , LOW ( 0x7D0 )
00014b e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00014c 9701     +SBIW R24 , 1
00014d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00014e 9711      	sbiw r26,1
00014f f7c9      	brne __delay_ms0
                 __delay_ms1:
000150 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  19 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   6 r17:   5 r18:   8 r19:   8 r20:   6 r21:   5 r22:   2 r23:   1 
r24:   8 r25:   2 r26:  39 r27:  19 r28:   6 r29:   2 r30: 119 r31:  27 
x  :   4 y  :  50 z  :   5 
Registers used: 21 out of 35 (60.0%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   7 
adiw  :   5 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   3 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :   0 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   5 
cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 cp    :   7 
cpc   :   5 cpi   :   1 cpse  :   0 dec   :   3 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 
inc   :   1 ld    :   1 ldd   :  25 ldi   :  64 lds   :   0 lpm   :   1 
lsl   :   2 lsr   :   0 mov   :   4 movw  :   6 mul   :   3 muls  :   0 
mulsu :   0 neg   :   4 nop   :   0 or    :   0 ori   :   0 out   :  42 
pop   :   2 push  :   2 rcall :   9 ret   :   7 reti  :   0 rjmp  :  34 
rol   :   1 ror   :   0 sbc   :   0 sbci  :   5 sbi   :   0 sbic  :   6 
sbis  :   3 sbiw  :   7 sbr   :   0 sbrc  :   0 sbrs  :   2 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   5 std   :  27 
sts   :   0 sub   :   0 subi  :   3 swap  :   0 tst   :   1 wdr   :   1 

Instructions used: 45 out of 114 (39.5%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0002a2    660     14    674    8192   8.2%
[.dseg] 0x000060 0x0000e0      0      0      0     512   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 1 warnings
